package mil.nga.country_name.v2;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.3.1
 * 2019-04-22T19:00:19.276Z
 * Generated source version: 3.3.1
 *
 */
@WebServiceClient(name = "country_name_service",
                  wsdlLocation = "WEB-INF/wsdl/country_name_service.wsdl",
                  targetNamespace = "mil:nga:country_name:v2")
public class CountryNameService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("mil:nga:country_name:v2", "country_name_service");
    public final static QName CountryNameServicePort = new QName("mil:nga:country_name:v2", "CountryNameServicePort");
    static {
        URL url = CountryNameService.class.getResource("WEB-INF/wsdl/country_name_service.wsdl");
        if (url == null) {
            url = CountryNameService.class.getClassLoader().getResource("WEB-INF/wsdl/country_name_service.wsdl");
        }
        if (url == null) {
            java.util.logging.Logger.getLogger(CountryNameService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "WEB-INF/wsdl/country_name_service.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public CountryNameService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public CountryNameService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CountryNameService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public CountryNameService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public CountryNameService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public CountryNameService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns CountryName
     */
    @WebEndpoint(name = "CountryNameServicePort")
    public CountryName getCountryNameServicePort() {
        return super.getPort(CountryNameServicePort, CountryName.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CountryName
     */
    @WebEndpoint(name = "CountryNameServicePort")
    public CountryName getCountryNameServicePort(WebServiceFeature... features) {
        return super.getPort(CountryNameServicePort, CountryName.class, features);
    }

}
